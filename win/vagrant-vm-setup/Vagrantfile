# Vagrantfile
Vagrant.configure("2") do |config|
  # Define different boxes based on architecture
  config.vm.define "windows" do |windows|
      # Determine architecture and best provider
      is_arm = RUBY_PLATFORM.include?("arm64")
      
      # Default provider precedence based on architecture
      if is_arm
        ENV['VAGRANT_DEFAULT_PROVIDER'] = 'parallels' unless ENV['VAGRANT_DEFAULT_PROVIDER']
      else
        ENV['VAGRANT_DEFAULT_PROVIDER'] = 'virtualbox' unless ENV['VAGRANT_DEFAULT_PROVIDER']
      end
      
      windows.vm.box = "stromweld/windows-11"
      windows.vm.hostname = "windev"
      
      # Bridge networking
      windows.vm.network "public_network"
      
      # VirtualBox provider (for Intel Macs or linux)
      windows.vm.provider "virtualbox" do |vb|
          # Detect host VirtualBox version
          vbox_version = `VBoxManage --version 2>/dev/null`.strip.split(/[^0-9\.]/)[0] rescue ""
          puts "Host VirtualBox Version: #{vbox_version}" unless vbox_version.empty?
          
          # VM resources configuration
          vb.memory = 6144
          vb.cpus = 4
          vb.name = "windows-dev-vm"
          vb.gui = true

          # Additional optimizations
          vb.customize ["modifyvm", :id, "--clipboard", "bidirectional"]
          vb.customize ["modifyvm", :id, "--draganddrop", "bidirectional"]
          vb.customize ["modifyvm", :id, "--graphicscontroller", "vboxsvga"]
      end
      
      # Parallels provider (for ARM Macs)
      windows.vm.provider "parallels" do |prl|
          # VM resources configuration
          prl.memory = 6144
          prl.cpus = 4
          prl.name = "windows-dev-vm"
          prl.update_guest_tools = true
          
          # Additional optimizations
          prl.customize ["set", :id, "--clipboard-sync", "bidirectional"]
          prl.customize ["set", :id, "--shared-profile", "off"]
          prl.customize ["set", :id, "--shared-cloud", "off"]
      end

      # Auto-detect provider for synced folders
      windows.vm.synced_folder "../../", "/Projects", type: is_arm ? "parallels" : "virtualbox"
      
      # Detect active provider for Ansible variables
      is_vbox = Vagrant::Util::Platform.windows? || 
               (!is_arm && !`which VBoxManage 2>/dev/null`.empty?)
      
      # WinRM configuration for Ansible
      windows.vm.communicator = "winrm"
      windows.winrm.username = "vagrant"
      windows.winrm.password = "vagrant"
      windows.winrm.transport = :plaintext
      windows.winrm.basic_auth_only = true
      
      # Provisioning with Ansible
      windows.vm.provision "ansible" do |ansible|
          ansible.playbook = "ansible/playbook.yml"
          ansible.compatibility_mode = "2.0"
          ansible.become = false
          ansible.extra_vars = {
              ansible_user: "vagrant",
              ansible_password: "vagrant",
              ansible_connection: "winrm",
              ansible_winrm_transport: "basic",
              ansible_winrm_server_cert_validation: "ignore",
              vbox_host_version: `VBoxManage --version 2>/dev/null`.strip.split(/[^0-9\.]/)[0] rescue "",
              is_vbox: is_vbox
          }
      end
  end
end